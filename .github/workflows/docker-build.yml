name: Docker-build

on:
  workflow_dispatch:
    inputs:
      typetag:
        description: 'Type a tag to run'
        required: true
        default: 'dev'

jobs:
  build-arm64:
    runs-on: ubuntu-24.04-arm
    steps:
    #  - name: Set up QEMU
    #    uses: docker/setup-qemu-action@v3
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      
      - name: Build and export image arm
        run: |
          docker build . -t localhost:5000/local/aura-bot:${{ github.event.inputs.typetag }}-arm
          mkdir -p path/to/artifacts
          docker save localhost:5000/local/aura-bot:${{ github.event.inputs.typetag }}-arm > path/to/artifacts/${{ github.event.inputs.typetag }}-arm-image.tar
      - name: Temporarily save Docker image arm
        uses: actions/upload-artifact@v4
        with:
          name: docker-artifact-arm
          path: path/to/artifacts
          retention-days: 1

  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      
      - name: Build and export image amd
        run: |
          docker build . -t localhost:5000/local/aura-bot:${{ github.event.inputs.typetag }}-amd
          mkdir -p path/to/artifacts
          docker save localhost:5000/local/aura-bot:${{ github.event.inputs.typetag }}-amd > path/to/artifacts/${{ github.event.inputs.typetag }}-amd-image.tar
      - name: Temporarily save Docker image amd
        uses: actions/upload-artifact@v4
        with:
          name: docker-artifact-amd
          path: path/to/artifacts
          retention-days: 1

  create-manifests:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Retrieve saved Docker image amd
        uses: actions/download-artifact@v4
        with:
          name: docker-artifact-amd
          path: path/to/artifacts
      - name: Retrieve saved Docker image arm
        uses: actions/download-artifact@v4
        with:
          name: docker-artifact-arm
          path: path/to/artifacts
      - name: Docker load
        run: |
          cd path/to/artifacts
          docker load < ${{ github.event.inputs.typetag }}-amd-image.tar
          docker load < ${{ github.event.inputs.typetag }}-arm-image.tar
          docker push localhost:5000/local/aura-bot:${{ github.event.inputs.typetag }}-amd-image.tar
          docker push localhost:5000/local/aura-bot:${{ github.event.inputs.typetag }}-arm-image.tar

      - name: Create SHA manifest
        run: |
          docker buildx imagetools create \
            -t nhatnhat011/aura-bot:${{ github.event.inputs.typetag }} \
            localhost:5000/local/aura-bot:${{ github.event.inputs.typetag }}-arm \
            localhost:5000/local/aura-bot:${{ github.event.inputs.typetag }}-amd
      - name: Push
        run: docker push nhatnhat011/aura-bot:${{ github.event.inputs.typetag }}
  # docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_TOKEN }} docker.io
